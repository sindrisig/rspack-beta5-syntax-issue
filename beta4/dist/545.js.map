{"version":3,"file":"545.js","sources":["webpack://example-builtin-swc-loader/./node_modules/.pnpm/@braze+web-sdk@5.4.0/node_modules/@braze/web-sdk/src/Core/log-purchase.js"],"sourcesContent":["import e from \"../managers/braze-instance.js\";\nimport { MAX_PURCHASE_QUANTITY as rr } from \"../common/constants.js\";\nimport { logger as r, EventTypes as i } from \"../../shared-lib/index.js\";\nimport tt from \"../triggers/models/trigger-events.js\";\nimport { TriggersProviderFactory as et } from \"../triggers/triggers-provider-factory.js\";\nimport {\n  validateCustomProperties as ot,\n  validateCustomString as rt,\n} from \"../util/validation-utils.js\";\nimport s from \"../common/event-logger.js\";\nexport function logPurchase(o, n, t, D, u) {\n  if (!e.X()) return !1;\n  if (\n    (null == t && (t = \"USD\"), null == D && (D = 1), null == o || o.length <= 0)\n  )\n    return (\n      r.error(\n        `logPurchase requires a non-empty productId, got \"${o}\", ignoring.`,\n      ),\n      !1\n    );\n  if (!rt(o, \"log purchase\", \"the purchase name\")) return !1;\n  if (null == n || isNaN(parseFloat(n.toString())))\n    return (\n      r.error(`logPurchase requires a numeric price, got ${n}, ignoring.`), !1\n    );\n  const a = parseFloat(n.toString()).toFixed(2);\n  if (null == D || isNaN(parseInt(D.toString())))\n    return (\n      r.error(`logPurchase requires an integer quantity, got ${D}, ignoring.`),\n      !1\n    );\n  const g = parseInt(D.toString());\n  if (g < 1 || g > rr)\n    return (\n      r.error(\n        `logPurchase requires a quantity >1 and <${rr}, got ${g}, ignoring.`,\n      ),\n      !1\n    );\n  t = null != t ? t.toUpperCase() : t;\n  if (\n    -1 ===\n    [\n      \"AED\",\n      \"AFN\",\n      \"ALL\",\n      \"AMD\",\n      \"ANG\",\n      \"AOA\",\n      \"ARS\",\n      \"AUD\",\n      \"AWG\",\n      \"AZN\",\n      \"BAM\",\n      \"BBD\",\n      \"BDT\",\n      \"BGN\",\n      \"BHD\",\n      \"BIF\",\n      \"BMD\",\n      \"BND\",\n      \"BOB\",\n      \"BRL\",\n      \"BSD\",\n      \"BTC\",\n      \"BTN\",\n      \"BWP\",\n      \"BYR\",\n      \"BZD\",\n      \"CAD\",\n      \"CDF\",\n      \"CHF\",\n      \"CLF\",\n      \"CLP\",\n      \"CNY\",\n      \"COP\",\n      \"CRC\",\n      \"CUC\",\n      \"CUP\",\n      \"CVE\",\n      \"CZK\",\n      \"DJF\",\n      \"DKK\",\n      \"DOP\",\n      \"DZD\",\n      \"EEK\",\n      \"EGP\",\n      \"ERN\",\n      \"ETB\",\n      \"EUR\",\n      \"FJD\",\n      \"FKP\",\n      \"GBP\",\n      \"GEL\",\n      \"GGP\",\n      \"GHS\",\n      \"GIP\",\n      \"GMD\",\n      \"GNF\",\n      \"GTQ\",\n      \"GYD\",\n      \"HKD\",\n      \"HNL\",\n      \"HRK\",\n      \"HTG\",\n      \"HUF\",\n      \"IDR\",\n      \"ILS\",\n      \"IMP\",\n      \"INR\",\n      \"IQD\",\n      \"IRR\",\n      \"ISK\",\n      \"JEP\",\n      \"JMD\",\n      \"JOD\",\n      \"JPY\",\n      \"KES\",\n      \"KGS\",\n      \"KHR\",\n      \"KMF\",\n      \"KPW\",\n      \"KRW\",\n      \"KWD\",\n      \"KYD\",\n      \"KZT\",\n      \"LAK\",\n      \"LBP\",\n      \"LKR\",\n      \"LRD\",\n      \"LSL\",\n      \"LTL\",\n      \"LVL\",\n      \"LYD\",\n      \"MAD\",\n      \"MDL\",\n      \"MGA\",\n      \"MKD\",\n      \"MMK\",\n      \"MNT\",\n      \"MOP\",\n      \"MRO\",\n      \"MTL\",\n      \"MUR\",\n      \"MVR\",\n      \"MWK\",\n      \"MXN\",\n      \"MYR\",\n      \"MZN\",\n      \"NAD\",\n      \"NGN\",\n      \"NIO\",\n      \"NOK\",\n      \"NPR\",\n      \"NZD\",\n      \"OMR\",\n      \"PAB\",\n      \"PEN\",\n      \"PGK\",\n      \"PHP\",\n      \"PKR\",\n      \"PLN\",\n      \"PYG\",\n      \"QAR\",\n      \"RON\",\n      \"RSD\",\n      \"RUB\",\n      \"RWF\",\n      \"SAR\",\n      \"SBD\",\n      \"SCR\",\n      \"SDG\",\n      \"SEK\",\n      \"SGD\",\n      \"SHP\",\n      \"SLL\",\n      \"SOS\",\n      \"SRD\",\n      \"STD\",\n      \"SVC\",\n      \"SYP\",\n      \"SZL\",\n      \"THB\",\n      \"TJS\",\n      \"TMT\",\n      \"TND\",\n      \"TOP\",\n      \"TRY\",\n      \"TTD\",\n      \"TWD\",\n      \"TZS\",\n      \"UAH\",\n      \"UGX\",\n      \"USD\",\n      \"UYU\",\n      \"UZS\",\n      \"VEF\",\n      \"VND\",\n      \"VUV\",\n      \"WST\",\n      \"XAF\",\n      \"XAG\",\n      \"XAU\",\n      \"XCD\",\n      \"XDR\",\n      \"XOF\",\n      \"XPD\",\n      \"XPF\",\n      \"XPT\",\n      \"YER\",\n      \"ZAR\",\n      \"ZMK\",\n      \"ZMW\",\n      \"ZWL\",\n    ].indexOf(t)\n  )\n    return (\n      r.error(`logPurchase requires a valid currencyCode, got ${t}, ignoring.`),\n      !1\n    );\n  const [P, R] = ot(\n    u,\n    \"logPurchase\",\n    \"purchaseProperties\",\n    `log purchase \"${o}\"`,\n    \"purchase\",\n  );\n  if (!P) return !1;\n  const c = e.ir();\n  if (c && c.Dr(o))\n    return r.info(`Purchase \"${o}\" is blocklisted, ignoring.`), !1;\n  const l = s.q(i.Pr, { pid: o, c: t, p: a, q: g, pr: R });\n  if (l.L) {\n    r.info(`Logged ${g} purchase${g > 1 ? \"s\" : \"\"} of \"${o}\" for ${t} ${a}.`);\n    for (const r of l.ge) et.rr().fe(tt.Rr, [o, u], r);\n  }\n  return l.L;\n}\n"],"names":["e","MAX_PURCHASE_QUANTITY","rr","logger","r","EventTypes","i","tt","TriggersProviderFactory","et","validateCustomProperties","ot","validateCustomString","rt","s","logPurchase","o","n","t","D","u","isNaN","parseFloat","a","parseInt","g","_ot","P","R","c","l","_iteratorError","_$r"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA8C;AACuB;AACI;AACnB;AACmC;AAIpD;AACK;AACnC,SAASe,YAAYC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC;IACvC,IAAI,CAACpB,gFAAG,IAAI,OAAO,CAAC;IACpB,IACG,QAAQkB,KAAMA,CAAAA,IAAI,KAAI,GAAI,QAAQC,KAAMA,CAAAA,IAAI,IAAI,QAAQH,KAAKA,EAAE,MAAM,IAAI,GAE1E,OACEZ,gFAAO,CACJ,oDAAqD,OAAFY,GAAE,kBAExD,CAAC;IAEL,IAAI,CAACH,wFAAEA,CAACG,GAAG,gBAAgB,sBAAsB,OAAO,CAAC;IACzD,IAAI,QAAQC,KAAKI,MAAMC,WAAWL,EAAE,QAAQ,MAC1C,OACEb,gFAAO,CAAE,6CAA8C,OAAFa,GAAE,iBAAe,CAAC;IAE3E,IAAMM,IAAID,WAAWL,EAAE,QAAQ,IAAI,OAAO,CAAC;IAC3C,IAAI,QAAQE,KAAKE,MAAMG,SAASL,EAAE,QAAQ,MACxC,OACEf,gFAAO,CAAE,iDAAkD,OAAFe,GAAE,iBAC3D,CAAC;IAEL,IAAMM,IAAID,SAASL,EAAE,QAAQ;IAC7B,IAAIM,IAAI,KAAKA,IAAIvB,gFAAEA,EACjB,OACEE,gFAAO,CACJ,2CAAqDqB,OAAXvB,gFAAEA,EAAC,UAAU,OAAFuB,GAAE,iBAE1D,CAAC;IAELP,IAAI,QAAQA,IAAIA,EAAE,WAAW,KAAKA;IACld,gFAAO,CAAE,kDAAmD,OAAFc,GAAE,iBAC5D,CAAC;IAEL,IAAeQ,uBAAAA,4FAAEA,CACfN,GACA,eACA,sBACC,iBAAkB,OAAFJ,GAAE,MACnB,iBALKW,IAAQD,QAALE,IAAKF;IAOf,IAAI,CAACC,GAAG,OAAO,CAAC;IAChB,IAAME,IAAI7B,kFAAI;IACd,IAAI6B,KAAKA,EAAE,EAAE,CAACb,IACZ,OAAOZ,8EAAM,CAAE,aAAc,OAAFY,GAAE,iCAA+B,CAAC;IAC/D,IAAMc,IAAIhB,2EAAG,CAACR,0EAAI,EAAE;QAAE,KAAKU;QAAG,GAAGE;QAAG,GAAGK;QAAG,GAAGE;QAAG,IAAIG;IAAE;IACtD,IAAIE,EAAE,CAAC,EAAE;QACP1B,8EAAM,CAAE,UAAsBqB,OAAbA,GAAE,aAAmCT,OAAxBS,IAAI,IAAI,MAAM,IAAG,SAAiBP,OAAVF,GAAE,UAAaO,OAALL,GAAE,KAAK,OAAFK,GAAE;YAClEQ,kCAAAA,2BAAAA;;YAAL,QAAKA,YAAWD,EAAE,EAAE,qBAAfC,SAAAA,6BAAAA,QAAAA,yBAAAA;gBAAAA,IAAMC,MAAND;gBAAiBtB,yGAAK,GAAG,EAAE,CAACF,wFAAK,EAAE;oBAACS;oBAAGI;iBAAE,EAAEY;;;YAA3CD;YAAAA;;;qBAAAA,6BAAAA;oBAAAA;;;oBAAAA;0BAAAA;;;;IACP;IACA,OAAOD,EAAE,CAAC;AACZ"}